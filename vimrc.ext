" #######################################
"             Vim settings
" #######################################
" vars
let g:author_name=''

" replace tab into replace with specify width
function SetSpaceIndent(sp)
	execute "setlocal tabstop=".a:sp
	execute "setlocal softtabstop=".a:sp
	execute "setlocal shiftwidth=".a:sp
	setlocal expandtab
endfunction

" autocmds
if has("autocmd")
	filetype on
	filetype plugin on
	filetype plugin indent on
	" append iskeyword
	autocmd FileType php setlocal iskeyword+=$
	autocmd FileType javascript setlocal iskeyword+=$
	autocmd FileType css,sass,scss setlocal iskeyword+=-
	" change tab spacing
	autocmd FileType css,sass,scss,php,javascript,html call SetSpaceIndent(4)
	autocmd FileType ruby,eruby,python,yaml call SetSpaceIndent(2)
	" Omni completions
	autocmd FileType javascript set omnifunc=javascriptcomplete#CompleteJS
	autocmd FileType html set omnifunc=htmlcomplete#CompleteTags
	autocmd FileType css set omnifunc=csscomplete#CompleteCSS
	autocmd FileType php set omnifunc=phpcomplete#CompletePHP
endif

" fold
set foldenable
set foldmethod=indent
set foldlevel=10

" show trailng spaces
" set lcs=tab:▸\ ,trail:·,eol:¬,nbsp:_
set list
set lcs=tab:\ \ ,trail:·

" #############################################################
" read local setting specify in different machines or projects
" #############################################################
" from home
if filereadable($HOME."/.vimrc.local")
	so ${HOME}/.vimrc.local
endif
" from current directory
if filereadable("./.vimrc.local")
	so ./.vimrc.local
endif

" #######################################
"             Plugin Settings
" #######################################

" zencoding
let g:user_zen_leader_key = '<Leader>,'

" syntastic
let g:syntastic_javascript_jshint_conf='~/.jshint.json'
let g:syntastic_mode_map = { 'mode': 'active',
						   \ 'active_filetypes': ['js', 'php', 'phtml']}

" NeoComplCache
let g:acp_enableAtStartup = 0
let g:neocomplcache_enable_at_startup = 1
let g:neocomplcache_enable_smart_case = 1
let g:neocomplcache_enable_camel_case_completion = 1
let g:neocomplcache_enable_underbar_completion = 1
let g:neocomplcache_min_syntax_length = 3
let g:neocomplcache_lock_buffer_name_pattern = '\*ku\*'

" pdv
"let g:pdv_cfg_Version = '0.0.1a'
let g:pdv_cfg_Author=g:author_name
"let g:pdv_cfg_paste = 0

" snipmate
let g:snips_author=g:author_name
let g:snips_trigger_key='<C-J>'
let g:snips_trigger_key_backwards='<C-H>'
let g:snipMate = {}
let g:snipMate.scope_aliases = {}
let g:snipMate.scope_aliases['php'] = 'php' " prevent trigger other snippets in php

" php syntax setting
"let php_noShortTags=1
"let php_parent_error_close=1
"let php_parent_error_open=1
"let php_htmlInStrings=1
let php_special_vars=1
let php_special_functions=1

" #######################################
"             Key Mappings
" #######################################
" pdv
nmap <C-K> :call PhpDocSingle()<CR>
vmap <C-K> :call PhpDocRange()<CR>

" tagbar toggle
nmap <F3> :TagbarToggle<CR><C-w>p
vmap <F3> <esc>:TagbarToggle<CR><C-w>p
imap <F3> <esc>:TagbarToggle<CR><C-w>p
